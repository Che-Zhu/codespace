(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{373:function(e,t,r){"use strict";r.r(t);var a=r(42),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"overview"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),r("p",[e._v("Machine learning is a field of study that gives computers the ability to learn without being explicitly programmed.")]),e._v(" "),r("h2",{attrs:{id:"definition"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#definition"}},[e._v("#")]),e._v(" Definition")]),e._v(" "),r("p",[e._v("A computer is said to learn from experience "),r("code",[e._v("E")]),e._v(" with respect to some tasks "),r("code",[e._v("T")]),e._v(" and some performance measure "),r("code",[e._v("P")]),e._v(", if its performance on "),r("code",[e._v("T")]),e._v(", as measured by "),r("code",[e._v("P")]),e._v(", improves with experience "),r("code",[e._v("E")]),e._v(".")]),e._v(" "),r("p",[r("strong",[e._v("Example 1")])]),e._v(" "),r("blockquote",[r("p",[e._v("Suppose your email program watches which emails you do or do not mark as spam, and based on that learns how to better filter spam.")])]),e._v(" "),r("p",[e._v("In this example, the program learns from experience "),r("code",[e._v("E")]),e._v(" (email program watching me label emails as spam or not spam), the task "),r("code",[e._v("T")]),e._v(" is to let program better filter spams, and the performance "),r("code",[e._v("p")]),e._v(" is measured by the number of emails it correctly classified as spam/not spam.")]),e._v(" "),r("p",[r("strong",[e._v("Example 2")])]),e._v(" "),r("blockquote",[r("p",[e._v("Playing checkers")])]),e._v(" "),r("p",[r("code",[e._v("E")]),e._v(" = The experience of playing many games of checkers")]),e._v(" "),r("p",[r("code",[e._v("T")]),e._v(" = The task of playing checkers")]),e._v(" "),r("p",[r("code",[e._v("P")]),e._v(" = The probability that the program will win the next game")]),e._v(" "),r("h2",{attrs:{id:"supervised-learning"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#supervised-learning"}},[e._v("#")]),e._v(" Supervised Learning")]),e._v(" "),r("p",[e._v("In supervised learning, we are given a data set and already know what our correct output should look like, having the idea that there is a relationship between the input and the output.")]),e._v(" "),r("p",[e._v("Supervised learning problems are categorized into "),r("code",[e._v("regression")]),e._v(" and "),r("code",[e._v("classification")]),e._v(" problems.")]),e._v(" "),r("p",[r("strong",[e._v("Regression Problem")])]),e._v(" "),r("p",[e._v("In a regression problem, we are trying to predict results within a continuous output, meaning that we are trying to map input variables to some continous function.")]),e._v(" "),r("p",[r("strong",[e._v("Example 1")])]),e._v(" "),r("blockquote",[r("p",[e._v("Given data about the size of houses on the real estate market, try to predict their price. Price as a function of size is a continuous output, so this is a regression problem.")])]),e._v(" "),r("p",[r("strong",[e._v("Example 2")])]),e._v(" "),r("blockquote",[r("p",[e._v("Given a picture of a person, to predict their age on the basis of the given picture.")])]),e._v(" "),r("p",[r("strong",[e._v("Classification Problem")])]),e._v(" "),r("p",[e._v("In a classification problem, we are tying to predict results in a discrete output. In other words, we are trying to map input variables into discrete categories.")]),e._v(" "),r("p",[r("strong",[e._v("Example 1")])]),e._v(" "),r("blockquote",[r("p",[e._v('Given data about the size of houses on the real estate market, classify our output by telling whether the house "sell for more or less than the asking price".')])]),e._v(" "),r("p",[r("strong",[e._v("Example 2")])]),e._v(" "),r("blockquote",[r("p",[e._v("Given a patient with a tumor, to predict whether the tumor is malignant or benign.")])]),e._v(" "),r("h2",{attrs:{id:"unsupervised-learning"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#unsupervised-learning"}},[e._v("#")]),e._v(" Unsupervised Learning")]),e._v(" "),r("p",[e._v("Unsupervised learning allows us to approach problems with little or no idea what our results should look like. We can derive strcuture from data where we don't necessarily know the effect of the variables.")]),e._v(" "),r("p",[e._v("We can derive this structure by clustering the data based on relationships among the variables in the data.")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),r("p",[e._v("With unsupervised learning there is no feedback based on the prediction results.")])]),e._v(" "),r("p",[r("strong",[e._v("Example")])]),e._v(" "),r("blockquote",[r("p",[e._v("Clustering: take a collection of 1,000,000 different genes, and find a way to automatically group these genes into groups that are somehow similar or related by different variables, such as lifespan, location, roles and so on.")])]),e._v(" "),r("h2",{attrs:{id:"reinforcement-learning"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#reinforcement-learning"}},[e._v("#")]),e._v(" Reinforcement learning")]),e._v(" "),r("ul",[r("li",[e._v("Algorithm actively collects data, by interacting with environment")]),e._v(" "),r("li",[r("ul",[r("li",[e._v("environment provides reward signals")])])]),e._v(" "),r("li",[r("ul",[r("li",[e._v("learn a policy to maximise reward over time")])])])]),e._v(" "),r("p",[r("strong",[e._v("Example")]),e._v("\nPlaying games, Alpha Go.")]),e._v(" "),r("h2",{attrs:{id:"frameworks"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#frameworks"}},[e._v("#")]),e._v(" Frameworks")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://scikit-learn.org/stable/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("scikit-learn"),r("OutboundLink")],1),e._v(" implements many Machine Learning algorithms efficiently, so it makes for a great entry point to learning Machine Learning")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.tensorflow.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("TensorFlow"),r("OutboundLink")],1),e._v(" is a more comlex library for distributed numerical computation. It makes it possible to train and run very large neural networks efficiently by distributing the computations across potentially hundreds of multi-GPU servers.")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://keras.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Keras"),r("OutboundLink")],1),e._v(" is a high-level Deep Learning API that makes it very simple to train and run neural networks. It can run on top of either TensorFlow, Theano, or Microsoft Cognitive Toolkit. TensorFlow comes with its own implementation of this API, called "),r("code",[e._v("tf.keras")]),e._v(", which provides support for some advanced TensorFlow features (e.g. the ability to efficiently load data).")])])}),[],!1,null,null,null);t.default=o.exports}}]);